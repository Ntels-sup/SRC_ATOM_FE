/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-05-18 08:26:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.atom.general.webcli;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cli_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tag/ntels.tld", Long.valueOf(1460021945519L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"/scripts/jwebsocket/pfnmWebSocket.js\"></script>\r\n");
      out.write("<script src=\"/scripts/jwebsocket/1_0_b1/jWebSocket.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("initPage(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.getAttribute('websocket.connect.url')}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\", \"commandLineInterface\");\r\n");
      out.write("\r\n");
      out.write("var paramArray;\r\n");
      out.write("var pkgName \t= \"\";\r\n");
      out.write("var processNo \t= \"\";\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\t\r\n");
      out.write("\t\r\n");
      out.write("\tvar tdObj = $(\"#packageNodeList\");\r\n");
      out.write("\tvar pkgOption = \"\";\r\n");
      out.write("\t\r\n");
      out.write("\tpkgOption = pkgOption + '<select id=\"system_id\" name=\"system_id\" class=\"group_single\" multiple=\"multiple\" value=\"UncheckAll\">';\r\n");
      out.write("\tpkgOption = pkgOption + '    ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\tpkgOption = pkgOption + '</select>';\r\n");
      out.write("\t\r\n");
      out.write("//\t \talert(pkgOption);\r\n");
      out.write("\r\n");
      out.write(" \t$(tdObj).empty();\r\n");
      out.write(" \t$(tdObj).append(pkgOption);\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"select[id=system_id]\").multipleSelect({\r\n");
      out.write("\t\tfilter\t\t: true,\r\n");
      out.write("\t\tsingle\t\t: true,  \r\n");
      out.write("        multiple\t: true,\r\n");
      out.write("        multipleWidth: 150,\r\n");
      out.write("        width\t\t: \"602px\",\r\n");
      out.write("        onClick\t\t: function(view){\r\n");
      out.write("       \t\tconsole.log('[mirinae.maru] Package / Node... :  ' + JSON.stringify(view.value));\r\n");
      out.write("       \t\tlistCMD( view.value );\r\n");
      out.write("       \t\tgetPkgName( view.value );\r\n");
      out.write("\r\n");
      out.write("       \t\tconditionInitialize();// 조건 초기화\r\n");
      out.write("        } \r\n");
      out.write("\t},\"refresh\");\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"select[id=cmd_name]\").multipleSelect({\r\n");
      out.write("    \tsingle\t: true,\r\n");
      out.write("    \tselectAll\t: false,\r\n");
      out.write("    \tmultiple\t: false,\r\n");
      out.write("        onClick\t\t: function(view){\r\n");
      out.write("       \t\tconsole.log('[mirinae.maru] CMD change :  ' + JSON.stringify(view.value));\r\n");
      out.write("       \t\tconditionInitialize();\t// 조건 초기화\r\n");
      out.write("       \t\tlistCMDArg( view.value );\r\n");
      out.write("        } \r\n");
      out.write("\t},\"refresh\");\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"select[id=svc_no]\").multipleSelect({\r\n");
      out.write("    \tsingle\t\t: true,\r\n");
      out.write("    \tselectAll\t: false,\r\n");
      out.write("    \tmultiple\t: false,\r\n");
      out.write("        onClick\t\t: function(view){\r\n");
      out.write("       \t\tconsole.log('[mirinae.maru] service change :  ' + JSON.stringify(view.value));\r\n");
      out.write("       \t\tlistProcess( view.value );// svc_no\r\n");
      out.write("        } \r\n");
      out.write("\t},\"refresh\");\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"select[id=proc_no]\").multipleSelect({\r\n");
      out.write("    \tsingle: true,\r\n");
      out.write("    \tselectAll: false,\r\n");
      out.write("    \tmultiple: false\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#execute\").click(function() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] session_id : ' + 18 );\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] node : ' + $(\"select[id=system_id] option:selected\").text());\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] command : ' + $(\"select[id=cmd_name] option:selected\").text());\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] command_code : ' + $(\"select[id=cmd_name]\").val() );\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] svc_no : ' + $(\"select[id=svc_no]\").val() );\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] proc_no : ' + $(\"select[id=proc_no]\").val() );\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] queue_name : ' + $(\"#queue_name\").val() );\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] queue_count : ' + $(\"#queue_count\").val() );\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar argument;\r\n");
      out.write("\t\tvar parameter;\r\n");
      out.write("\t\tvar parameter_array;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar argument_array \t= new Array();\r\n");
      out.write("\t\tvar JSON_data \t\t= new Object();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar node_name \t= $(\"select[id=system_id] option:selected\").text();\r\n");
      out.write("\t\tvar command_code= $(\"select[id=cmd_name]\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// package / node\r\n");
      out.write("\t\tif( node_name==null || node_name==\"\" ) {\r\n");
      out.write("\t\t\topenAlertModal(\"\",\"Package / Node를 선택해 주세요.\",function(){\r\n");
      out.write("\t\t\t\t$(\"#system_id\").focus();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("    \t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// command\r\n");
      out.write("\t\tif( command_code==null || command_code==\"\" ) {\r\n");
      out.write("\t\t\topenAlertModal(\"\",\"Command를 선택해 주세요.\",function(){\r\n");
      out.write("\t\t\t\t$(\"#cmd_name\").focus();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("    \t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tJSON_data.session_id \t= \"01025231692\";\r\n");
      out.write("\t\tJSON_data.command_code \t= $(\"select[id=cmd_name]\").val();\r\n");
      out.write("\t\tJSON_data.command \t\t= $(\"select[id=cmd_name] option:selected\").text();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] JSON_data : ' + JSON.stringify(JSON_data) );\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar chk = true;\r\n");
      out.write("\t\t$.each(paramArray, function(i,command_arg_name) {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif( command_arg_name==\"SERVICE_NAME\" ) {\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif( $(\"select[id=svc_no] option:selected\").val()==undefined || $(\"select[id=svc_no] option:selected\").val()==null || $(\"select[id=svc_no] option:selected\").val()==\"\" ) {\r\n");
      out.write("\t\t\t\t\topenAlertModal(\"Service를 선택해 주세요.\",\"\",function(){\r\n");
      out.write("\t\t\t\t\t\t $(\"select[id=svc_no]\").focus();\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\tchk = false;\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\targument \t= new Object();\r\n");
      out.write("\t\t\t\t\tparameter \t= new Object();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\targument.name = command_arg_name;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tparameter_array = new Array();\r\n");
      out.write("\t\t\t\t\tparameter.parameter = $(\"select[id=svc_no] option:selected\").text();\r\n");
      out.write("\t\t\t\t\tparameter_array.push( parameter );\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\targument.parameter_array = parameter_array;\r\n");
      out.write("\t\t\t\t\tconsole.log('[mirinae.maru] service argument : ' + JSON.stringify(argument) );\r\n");
      out.write("\t\t\t\t\targument_array.push( argument );\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if( command_arg_name==\"PROCESS_NAME\" ) {\r\n");
      out.write("    \t\t\t\r\n");
      out.write("    \t\t\tif( $(\"select[id=proc_no] option:selected\").val()==undefined || $(\"select[id=proc_no] option:selected\").val()==null || $(\"select[id=proc_no] option:selected\").val()==\"\" ) {\r\n");
      out.write("\t\t\t\t\topenAlertModal(\"Process를 선택해 주세요.\",\"\",function() {\r\n");
      out.write("\t\t\t\t\t\t $(\"select[id=proc_no]\").focus();\r\n");
      out.write("\t\t\t\t\t});\t\t\r\n");
      out.write("\t\t\t\t\tchk = false;\t\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\targument \t= new Object();\r\n");
      out.write("\t\t\t\t\tparameter \t= new Object();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\targument.name = command_arg_name;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tparameter_array = new Array();\r\n");
      out.write("\t\t\t\t\tparameter.parameter = $(\"select[id=proc_no] option:selected\").text();\r\n");
      out.write("\t\t\t\t\tparameter_array.push( parameter );\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\targument.parameter_array = parameter_array;\r\n");
      out.write("\t\t\t\t\tconsole.log('[mirinae.maru] process argument : ' + JSON.stringify(argument) );\r\n");
      out.write("\t\t\t\t\targument_array.push( argument );\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tprocessNo = $(\"select[id=proc_no] option:selected\").val();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if( command_arg_name==\"QUEUE_NAME\" ) {\r\n");
      out.write("    \t\t\t\r\n");
      out.write("    \t\t\tif( $(\"#queue_name\").val()==null || $(\"#queue_name\").val()==\"\" ) {\r\n");
      out.write("\t\t\t\t\topenAlertModal(\"\",\"Queue Name을 입력해 주세요.\",function(){$(\"#queue_name\").focus();});\r\n");
      out.write("\t\t\t\t\tchk = false;\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\targument \t= new Object();\r\n");
      out.write("\t\t\t\t\tparameter \t= new Object();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\targument.name = command_arg_name;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tparameter_array = new Array();\r\n");
      out.write("\t\t\t\t\tparameter.parameter = $(\"#queue_name\").val();\r\n");
      out.write("\t\t\t\t\tparameter_array.push( parameter );\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\targument.parameter_array = parameter_array;\r\n");
      out.write("\t\t\t\t\tconsole.log('[mirinae.maru] queue name argument : ' + JSON.stringify(argument) );\r\n");
      out.write("\t\t\t\t\targument_array.push( argument );\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("    \t\t}\r\n");
      out.write("\t\t\telse if( command_arg_name==\"QUEUE_COUNT\" ) {\r\n");
      out.write("    \t\t\t\r\n");
      out.write("\t\t\t\tif( $(\"#queue_count\").val()==null || $(\"#queue_count\").val()==\"\" ) {\r\n");
      out.write("\t\t\t\t\topenAlertModal(\"\",\"Queue Count을 입력해 주세요.\",function(){$(\"#queue_count\").focus();});\r\n");
      out.write("\t\t\t\t\tchk = false;\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\targument \t= new Object();\r\n");
      out.write("\t\t\t\t\tparameter \t= new Object();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\targument.name = command_arg_name;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tparameter_array = new Array();\r\n");
      out.write("\t\t\t\t\tparameter.parameter = $(\"#queue_count\").val();\r\n");
      out.write("\t\t\t\t\tparameter_array.push( parameter );\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\targument.parameter_array = parameter_array;\r\n");
      out.write("\t\t\t\t\tconsole.log('[mirinae.maru] queue count argument : ' + JSON.stringify(argument) );\r\n");
      out.write("\t\t\t\t\targument_array.push( argument );\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t\t\r\n");
      out.write("\t\t\tJSON_data.argument_array = argument_array;\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log('[mirinae.maru] final JSON_data : ' + JSON.stringify(JSON_data) );\r\n");
      out.write("     \tconsole.log(JSON_data);\r\n");
      out.write("     \t//var aaa =\"'\"+JSON.stringify(JSON_data) +\"'\";\r\n");
      out.write("     \tvar aaa = '{\"session_id\":\"01025231692\",\"command_code\":\"1002\",\"command\":\"DISP-EXT\"}';\r\n");
      out.write("\t\tif( chk ) CommandREQ(\"0000080001\", \"\", processNo, JSON.stringify(JSON_data));\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/* function fnPreparedSocket() {\r\n");
      out.write("\tconsole.log(\"fnPreparedSocket\");\r\n");
      out.write("} */\r\n");
      out.write("function conditionInitialize() {\r\n");
      out.write("\t\r\n");
      out.write("\t// service selectbox 초기화\r\n");
      out.write("\t$(\"select[id=svc_no]\").empty().multipleSelect(\"refresh\");\r\n");
      out.write("\t$(\".service_view\").css(\"display\",\"none\");\r\n");
      out.write("\t\r\n");
      out.write("\t// process selectbox 초기화\r\n");
      out.write("\t$(\"select[id=proc_no]\").empty().multipleSelect(\"refresh\");\r\n");
      out.write("\t$(\".process_view\").css(\"display\",\"none\");\r\n");
      out.write("\t\r\n");
      out.write("\t// queue name 초기화\r\n");
      out.write("\t$(\"#queue_name\").val(\"\");\r\n");
      out.write("\t$(\".queue_name_view\").css(\"display\",\"none\");\r\n");
      out.write("\t\r\n");
      out.write("\t// queue count 초기화\r\n");
      out.write("\t$(\"#queue_count\").val(\"\");\r\n");
      out.write("\t$(\".queue_count_view\").css(\"display\",\"none\");\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getPkgName( node_name ) {\r\n");
      out.write("\t\r\n");
      out.write("\tvar param = new Object();\r\n");
      out.write("\tparam.node_name = node_name;\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("        url \t: \"getPkgName\",\r\n");
      out.write("        data\t: param,\r\n");
      out.write("        type \t: 'POST',\r\n");
      out.write("        dataType: 'text',\r\n");
      out.write("        success : function(data) {\r\n");
      out.write("        \tpkgName = data;\r\n");
      out.write("        },\r\n");
      out.write("        error: function(e){\r\n");
      out.write("        \topenAlertModal(e.responseText);\r\n");
      out.write("        },\r\n");
      out.write("        complete : function() {}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function listCMD( node_name ) {\r\n");
      out.write("\t\r\n");
      out.write("\tvar optionTag = \"\";\r\n");
      out.write("\t$(\"select[name='cmd_name'] option\").remove();\r\n");
      out.write(" \t$(\"#cmd_name\").html('<option value=\"\">Select</option>');\r\n");
      out.write(" \t\r\n");
      out.write(" \t$(\"#cmd_name\").append(optionTag).multipleSelect('refresh');\r\n");
      out.write(" \t\r\n");
      out.write("\tvar param = new Object();\r\n");
      out.write("\tparam.node_name = node_name;\r\n");
      out.write("\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("        url \t: \"listCMD\",\r\n");
      out.write("        data\t: param,\r\n");
      out.write("        type \t: 'POST',\r\n");
      out.write("        dataType: 'json',\r\n");
      out.write("        success : function(data) {\r\n");
      out.write("        \tconsole.log( \"[mirinae.maru] listCMD data : \" + JSON.stringify(data) );\r\n");
      out.write("        \t$.each(data,function(index,obj) {\r\n");
      out.write("     \t\t\toptionTag = $('<option value=\"'+obj.CMD_CODE+'\">'+obj.CMD_NAME+'</option>');\r\n");
      out.write("    \t\t\t$(\"#cmd_name\").append(optionTag).multipleSelect('refresh');\r\n");
      out.write("     \t\t});\r\n");
      out.write("        },\r\n");
      out.write("        error: function(e){\r\n");
      out.write("        \topenAlertModal(e.responseText);\r\n");
      out.write("        },\r\n");
      out.write("        complete : function() {}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function listCMDArg( cmd_code ) {\r\n");
      out.write("\t\r\n");
      out.write("\tconsole.log('[mirinae.maru] listCMDArg change : ' + cmd_code );\r\n");
      out.write("\r\n");
      out.write("\tvar param = new Object();\r\n");
      out.write("\tparam.cmd_code = cmd_code;\r\n");
      out.write("\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("        url \t: \"listCMDArg\",\r\n");
      out.write("        data\t: param,\r\n");
      out.write("        type \t: 'POST',\r\n");
      out.write("        dataType: 'json',\r\n");
      out.write("        success : function(data) {\r\n");
      out.write("        \t\r\n");
      out.write("        \tparamArray = new Array();\r\n");
      out.write("        \t\r\n");
      out.write("        \tconsole.log( \"[mirinae.maru] listCMDArg data : \" + JSON.stringify(data) );\r\n");
      out.write("        \t$.each(data,function(index,obj) {\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tconsole.log( \"[mirinae.maru] listCMDArg ARG_NAME : \" + obj.ARG_NAME );\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tif( obj.ARG_NAME==\"SERVICE_NAME\" ) {\r\n");
      out.write("        \t\t\tconsole.log( \"[mirinae.maru] service list request...\" );\r\n");
      out.write("        \t\t\tlistService( pkgName );\t// service 리스트 요청\r\n");
      out.write("        \t\t\t$(\".service_view\").css(\"display\",\"table-row\");\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t// command parameter - PROCESS_NAME\r\n");
      out.write("        \t\tif( obj.ARG_NAME==\"PROCESS_NAME\" ) {\r\n");
      out.write("        \t\t\t$(\".process_view\").css(\"display\",\"table-row\");\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tif( obj.ARG_NAME==\"QUEUE_NAME\" ) {\r\n");
      out.write("        \t\t\t$(\".queue_name_view\").css(\"display\",\"table-row\");\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tif( obj.ARG_NAME==\"QUEUE_COUNT\" ) {\r\n");
      out.write("        \t\t\t$(\".queue_count_view\").css(\"display\",\"table-row\");\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t\t\r\n");
      out.write("    \t\t\tparamArray.push(obj.ARG_NAME);\r\n");
      out.write("     \t\t});\r\n");
      out.write("        },\r\n");
      out.write("        error: function(e){\r\n");
      out.write("        \topenAlertModal(e.responseText);\r\n");
      out.write("        },\r\n");
      out.write("        complete : function() {}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function listService( pkg_name ) {\r\n");
      out.write("\t\r\n");
      out.write("\tvar optionTag = \"\";\r\n");
      out.write("\t$(\"select[name='svc_no'] option\").remove();\r\n");
      out.write(" \t$(\"#svc_no\").html('<option value=\"\">Select</option>');\r\n");
      out.write(" \t\r\n");
      out.write(" \t$(\"#svc_no\").append(optionTag).multipleSelect('refresh');\r\n");
      out.write(" \t\r\n");
      out.write("\tvar param = new Object();\r\n");
      out.write("\tparam.pkg_name = pkg_name;\r\n");
      out.write("\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("        url \t: \"listService\",\r\n");
      out.write("        data\t: param,\r\n");
      out.write("        type \t: 'POST',\r\n");
      out.write("        dataType: 'json',\r\n");
      out.write("        success : function(data) {\r\n");
      out.write("        \tconsole.log( \"[mirinae.maru] svc_no data : \" + JSON.stringify(data) );\r\n");
      out.write("        \t$.each(data,function(index,obj) {\r\n");
      out.write("     \t\t\toptionTag = $('<option value=\"'+obj.SVC_NO+'\">'+obj.SVC_NAME+'</option>');\r\n");
      out.write("    \t\t\t$(\"#svc_no\").append(optionTag).multipleSelect('refresh');\r\n");
      out.write("     \t\t});\r\n");
      out.write("        },\r\n");
      out.write("        error: function(e){\r\n");
      out.write("        \topenAlertModal(e.responseText);\r\n");
      out.write("        },\r\n");
      out.write("        complete : function() {}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function listProcess( svc_no ) {\r\n");
      out.write("\t\r\n");
      out.write("\tconsole.log( \"[mirinae.maru] listProcess node_name : \" + $(\"#system_id\").val() );\r\n");
      out.write("\tconsole.log( \"[mirinae.maru] listProcess svc_no : \" + svc_no );\r\n");
      out.write("\t\r\n");
      out.write("\tvar obj = $(\"#system_id\").val()+\"\";\r\n");
      out.write("\tconsole.log( \"[mirinae.maru] obj type : \" + (typeof obj) );\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tvar optionTag = \"\";\r\n");
      out.write("\t$(\"select[name='proc_no'] option\").remove();\r\n");
      out.write(" \t$(\"#proc_no\").html('<option value=\"\">Select</option>');\r\n");
      out.write(" \t\r\n");
      out.write(" \t$(\"#proc_no\").append(optionTag).multipleSelect('refresh');\r\n");
      out.write(" \t\r\n");
      out.write("\tvar param \t\t= new Object();\r\n");
      out.write("\tparam.node_name = $(\"#system_id\").val()+\"\";\r\n");
      out.write("\tparam.svc_no \t= svc_no;\t\r\n");
      out.write("\r\n");
      out.write("\tconsole.log( \"[mirinae.maru] listProcess param : \" + JSON.stringify(param) );\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("        url \t: \"listProcess\",\r\n");
      out.write("        data\t: param,\r\n");
      out.write("        type \t: 'POST',\r\n");
      out.write("        dataType: 'json',\r\n");
      out.write("        success : function(data) {\r\n");
      out.write("        \tconsole.log( \"[mirinae.maru] proc data : \" + JSON.stringify(data) );\r\n");
      out.write("        \t$.each(data,function(index,obj) {\r\n");
      out.write("     \t\t\toptionTag = $('<option value=\"'+obj.PROC_NO+'\">'+obj.PROC_NAME+'</option>');\r\n");
      out.write("    \t\t\t$(\"#proc_no\").append(optionTag).multipleSelect('refresh');\r\n");
      out.write("     \t\t});\r\n");
      out.write("        },\r\n");
      out.write("        error: function(e){\r\n");
      out.write("        \topenAlertModal(e.responseText);\r\n");
      out.write("        },\r\n");
      out.write("        complete : function() {}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function fnCommonMessage(command, messages) {\r\n");
      out.write("\t\r\n");
      out.write("\tmessages = $.parseJSON(messages); //String to Json 변환\r\n");
      out.write("\tconsole.log(\"받음 command->\"+command);\r\n");
      out.write("\tconsole.log(messages);\r\n");
      out.write("\t\r\n");
      out.write("\tif (command == 80001) { \r\n");
      out.write("\t\tconsole.log( \"[mirinae.maru] CLI_COMMAND response...\" );\r\n");
      out.write("\t\tresponseCliCommand( messages );\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function responseCliCommand( messages ) {\r\n");
      out.write("\tconsole.log( \"[mirinae.maru] response MSG : \" + JSON.stringify(messages) );\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- content -->\r\n");
      out.write("    <div class=\"content\">\r\n");
      out.write("        <div class=\"cont_body\">\r\n");
      out.write("\t\t\t<div class=\"cont_left\">\r\n");
      out.write("\t\t\t\t<div class=\"detail type2\">\r\n");
      out.write("\t\t\t\t\t<table class=\"tbl_detail register\">\r\n");
      out.write("\t\t\t\t\t\t<caption>Configuration</caption>\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"col\" class=\"imp\">");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("</th><!-- Package / Node -->\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"select_group_type02\" id=\"packageNodeList\"></div>\t\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"col\" class=\"imp\">");
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("</th><!-- Command -->\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select id=\"cmd_name\" name=\"cmd_name\" class=\"single\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr class=\"service_view\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"col\" class=\"imp\">");
      if (_jspx_meth_spring_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("</th><!-- Service -->\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr class=\"service_view\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select id=\"svc_no\" name=\"svc_no\" class=\"single\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr class=\"process_view\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"col\" class=\"imp\">");
      if (_jspx_meth_spring_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("</th><!-- Process -->\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr class=\"process_view\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select id=\"proc_no\" name=\"proc_no\" class=\"single\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr class=\"queue_name_view\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"col\" class=\"imp\">");
      if (_jspx_meth_spring_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("</th><!-- Queue Name -->\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr class=\"queue_name_view\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"queue_name\" id=\"queue_name\" placeholder=\"keyword\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr class=\"queue_count_view\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<th scope=\"col\" class=\"imp\">");
      if (_jspx_meth_spring_005fmessage_005f5(_jspx_page_context))
        return;
      out.write("</th><!-- Queue Count -->\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr class=\"queue_count_view\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"queue_count\" id=\"queue_count\" placeholder=\"keyword\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"btn_area\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"major\" id=\"execute\">");
      if (_jspx_meth_spring_005fmessage_005f6(_jspx_page_context))
        return;
      out.write("</button><!-- Execute -->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"command type2\">\r\n");
      out.write("\t\t\t\t<header>\r\n");
      out.write("\t\t\t\t\t<h3>STATUS</h3>\r\n");
      out.write("\t\t\t\t\t<div class=\"btn_area\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn_icon eraser\" title=\"Ereser\"/>");
      if (_jspx_meth_spring_005fmessage_005f7(_jspx_page_context))
        return;
      out.write("</button><!-- Ereser -->\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn_icon down\" title=\"Download\"/>");
      if (_jspx_meth_spring_005fmessage_005f8(_jspx_page_context))
        return;
      out.write("</button><!-- Download -->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t<div class=\"statusview scroll-type4\">\r\n");
      out.write("\t\t\t\t\t[/WORK/SCRIPT/MNT_BACKUP/20160419122401/T_MDF_CDR_ERROR_CODE.sql] ............. verified<br>\r\n");
      out.write("\t\t\t\t\t[/WORK/SCRIPT/MNT_BACKUP/20160419122401/T_MDF_CO_DIA_DATE_REF.sql] ............. verified<br>\r\n");
      out.write("\t\t\t\t\t[/WORK/SCRIPT/MNT_BACKUP/20160419122401/T_MDF_CO_DIA_DEF.sql] ............. verified<br>\r\n");
      out.write("\t\t\t\t\t[/WORK/SCRIPT/MNT_BACKUP/20160419122401/T_MDF_CO_DIA_DIC_AVP.sql] ............. verified<br>\r\n");
      out.write("\t\t\t\t\t[/WORK/SCRIPT/MNT_BACKUP/20160419122401/T_MDF_CO_DIA_DIC_AVP_TYPE.sql] ............. verified<br>\r\n");
      out.write("\t\t\t\t\t[/WORK/SCRIPT/MNT_BACKUP/20160419122401/T_MDF_CO_DIA_DIC_AVP_VALUE.sql] ............. verified<br>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- //cont_body -->     \r\n");
      out.write("    </div>\r\n");
      out.write("    <!--// content --> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(25,30) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/atom/general/webcli/cli.jsp(25,30) '${Package}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${Package}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /WEB-INF/views/atom/general/webcli/cli.jsp(25,30) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("Packagelist");
    // /WEB-INF/views/atom/general/webcli/cli.jsp(25,30) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVarStatus("status");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("';\r\n");
          out.write("\tpkgOption = pkgOption + '        <optgroup label=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Packagelist.NAME}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\">';\r\n");
          out.write("\tpkgOption = pkgOption + '            ");
          if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("';\r\n");
          out.write("\tpkgOption = pkgOption + '        </optgroup>';\r\n");
          out.write("\tpkgOption = pkgOption + '     ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(27,38) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/atom/general/webcli/cli.jsp(27,38) '${System}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${System}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /WEB-INF/views/atom/general/webcli/cli.jsp(27,38) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setVar("Systemlist");
    // /WEB-INF/views/atom/general/webcli/cli.jsp(27,38) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setVarStatus("status");
    int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
      if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("';\r\n");
          out.write("\tpkgOption = pkgOption + '               ");
          if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("';\r\n");
          out.write("\tpkgOption = pkgOption + '            ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f1.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(28,41) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Packagelist.ID eq Systemlist.PACKAGEID}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("';\r\n");
        out.write("\tpkgOption = pkgOption + '               \t\t<option value=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Systemlist.NAME}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write('"');
        out.write('>');
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Systemlist.NAME}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("</option>';\r\n");
        out.write("\tpkgOption = pkgOption + '               ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f0.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(458,36) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f0.setCode("label.security.operationhist.package_system.text");
    int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
      if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f0.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f1.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(466,36) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f1.setCode("label.security.operationhist.command.text");
    int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
      if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f1.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f2.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(474,36) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f2.setCode("label.common.service");
    int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
      if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f2.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f3.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(482,36) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f3.setCode("label.configuration.processmanager.process.text");
    int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
      if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f3.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f4.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(490,36) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f4.setCode("label.general.cli.queuename.text");
    int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
      if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f4.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f5 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f5.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f5.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(498,36) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f5.setCode("label.general.cli.queuecount.text");
    int[] _jspx_push_body_count_spring_005fmessage_005f5 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f5 = _jspx_th_spring_005fmessage_005f5.doStartTag();
      if (_jspx_th_spring_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f5[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f5.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f5.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f5);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f6 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f6.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f6.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(510,55) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f6.setCode("label.configuration.processmanager.execute.text");
    int[] _jspx_push_body_count_spring_005fmessage_005f6 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f6 = _jspx_th_spring_005fmessage_005f6.doStartTag();
      if (_jspx_th_spring_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f6[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f6.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f6.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f6);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f7 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f7.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f7.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(518,68) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f7.setCode("label.general.cli.ereser.text");
    int[] _jspx_push_body_count_spring_005fmessage_005f7 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f7 = _jspx_th_spring_005fmessage_005f7.doStartTag();
      if (_jspx_th_spring_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f7[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f7.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f7.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f7);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f8 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f8.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f8.setParent(null);
    // /WEB-INF/views/atom/general/webcli/cli.jsp(519,68) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f8.setCode("label.common.downlaod");
    int[] _jspx_push_body_count_spring_005fmessage_005f8 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f8 = _jspx_th_spring_005fmessage_005f8.doStartTag();
      if (_jspx_th_spring_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f8[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f8.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f8.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f8);
    }
    return false;
  }
}
