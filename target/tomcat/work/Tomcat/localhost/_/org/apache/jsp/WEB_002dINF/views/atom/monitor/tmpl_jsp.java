/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-05-17 01:22:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.atom.monitor;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class tmpl_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script id=\"temperatureTmpl\" type=\"text/x-tmpl\">\r\n");
      out.write("{{each(key,item) msg}}\r\n");
      out.write("\t{{if item.NAME==\"CPU TEMP\"}}\r\n");
      out.write("\t\t{{each(k,v) item}}\r\n");
      out.write("\t\t{{if k!=\"NAME\" && k!=\"LIST\"}}\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("        \t<td>${k}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${v.avg}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${v.max}</td>\r\n");
      out.write("\t    \t<td class=\"t_r\">${v.min}</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t{{/if}}\r\n");
      out.write("\t\t{{/each}}\r\n");
      out.write("\t{{/if}}\r\n");
      out.write("{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script id=\"cpuTmpl\" type=\"text/x-tmpl\">\r\n");
      out.write("{{each(key,item) msg}}\r\n");
      out.write("\t{{if item.NAME==\"CPU\"}}\r\n");
      out.write("\t\t{{each(k,v) item}}\r\n");
      out.write("\t\t{{if k!=\"NAME\" && k!=\"LIST\"}}\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("        \t<td>${k}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${v.usage}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${v.user}</td>\r\n");
      out.write("\t    \t<td class=\"t_r\">${v.sys}</td>\r\n");
      out.write("    \t\t<td class=\"t_r\">${v.idle}</td>\r\n");
      out.write("    \t\t<td class=\"t_r\">${v.wait}</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t{{/if}}\r\n");
      out.write("\t\t{{/each}}\r\n");
      out.write("\t{{/if}}\r\n");
      out.write("{{/each}}\t\t\t\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script id=\"diskTmpl\" type=\"text/x-tmpl\">\r\n");
      out.write("{{each(key,item) msg}}\r\n");
      out.write("\t{{if item.NAME==\"DISK\"}}\r\n");
      out.write("\t\t{{each(k,v) item}}\r\n");
      out.write("\t\t{{if k!=\"NAME\" && k!=\"LIST\"}}\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("        \t<td>${k}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${v.usage}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${tmplNumberFormat(v.total)}</td>\r\n");
      out.write("\t    \t<td class=\"t_r\">${tmplNumberFormat(v.used)}</td>\r\n");
      out.write("    \t\t<td class=\"t_r\">${tmplNumberFormat(v.free)}</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t{{/if}}\r\n");
      out.write("\t\t{{/each}}\r\n");
      out.write("\t{{/if}}\r\n");
      out.write("{{/each}}        \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script id=\"memoryTmpl\" type=\"text/x-tmpl\">\r\n");
      out.write("{{each(key,item) msg}}\r\n");
      out.write("\t{{if item.NAME==\"Memory\"}}\r\n");
      out.write("\t\t{{each(k,v) item}}\r\n");
      out.write("\t\t{{if k!=\"NAME\" && k!=\"LIST\"}}\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("        \t<td>${k}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${v.usage}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${tmplNumberFormat(v.total)}</td>\r\n");
      out.write("\t    \t<td class=\"t_r\">${tmplNumberFormat(v.used)}</td>\r\n");
      out.write("    \t\t<td class=\"t_r\">${tmplNumberFormat(v.free)}</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t{{/if}}\r\n");
      out.write("\t\t{{/each}}\r\n");
      out.write("\t{{/if}}\r\n");
      out.write("{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script id=\"queueTmpl\" type=\"text/x-tmpl\">\r\n");
      out.write("{{each(key,item) msg}}\r\n");
      out.write("\t{{if item.NAME==\"QUEUE\"}}\r\n");
      out.write("\t\t{{each(k,v) item}}\r\n");
      out.write("\t\t{{if k!=\"NAME\" && k!=\"LIST\"}}\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("        \t<td>${k}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${v.usage}</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t{{/if}}\r\n");
      out.write("\t\t{{/each}}\r\n");
      out.write("\t{{/if}}\r\n");
      out.write("{{/each}}   \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script id=\"tablespaceTmpl\" type=\"text/x-tmpl\">\r\n");
      out.write("{{each(key,item) msg}}\r\n");
      out.write("\t{{if item.NAME==\"DB Table Space\"}}\r\n");
      out.write("\t\t{{each(k,v) item}}\r\n");
      out.write("\t\t{{if k!=\"NAME\" && k!=\"LIST\"}}\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("        \t<td>${k}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${v.usage}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${tmplNumberFormat(v.total)}</td>\r\n");
      out.write("\t    \t<td class=\"t_r\">${tmplNumberFormat(v.used)}</td>\r\n");
      out.write("    \t\t<td class=\"t_r\">${tmplNumberFormat(v.free)}</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t{{/if}}\r\n");
      out.write("\t\t{{/each}}\r\n");
      out.write("\t{{/if}}\r\n");
      out.write("{{/each}}  \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script id=\"nicTmpl\" type=\"text/x-tmpl\">\r\n");
      out.write("{{each(key,item) msg}}\r\n");
      out.write("\t{{if item.NAME==\"NIC\"}}\r\n");
      out.write("\t\t{{each(k,v) item}}\r\n");
      out.write("\t\t{{if k!=\"NAME\" && k!=\"LIST\"}}\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("        \t<td>${k}</td>\r\n");
      out.write("        \t<td>${v.status}</td>\r\n");
      out.write("        \t<td class=\"t_r\">${tmplNumberFormat(v.TX)}</td>\r\n");
      out.write("\t    \t<td class=\"t_r\">${tmplNumberFormat(v.RX)}</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t{{/if}}\r\n");
      out.write("\t\t{{/each}}\r\n");
      out.write("\t{{/if}}\r\n");
      out.write("{{/each}}       \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function tmplDateFormat( date ) {\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] date : \" + date );\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] date : \" + date );\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] date : \" + date );\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] date : \" + date );\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] date : \" + date );\r\n");
      out.write("\r\n");
      out.write("\tvar patternDate = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionUser.patternDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("'.replace(\"yyyy\",\"yy\");\r\n");
      out.write("\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] time pattern type : \" + patternDate );\r\n");
      out.write("\t\r\n");
      out.write("\tvar formatted = $.datepicker.formatDate( patternDate, new Date(date))\r\n");
      out.write("\t\t+ date.substring(10, date.length);\r\n");
      out.write("\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] patternDate : \" + patternDate );\r\n");
      out.write("\t\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] formatted date : \" + formatted );\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] formatted date : \" + formatted );\r\n");
      out.write("// \tconsole.log( \"[mirinae.maru] formatted date : \" + formatted );\r\n");
      out.write("\t\r\n");
      out.write("\treturn formatted;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function tmplNumberFormat( num ) {\r\n");
      out.write("\t//console.log( \"[mirinae.maru] num : \" + num );\r\n");
      out.write("\treturn num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
