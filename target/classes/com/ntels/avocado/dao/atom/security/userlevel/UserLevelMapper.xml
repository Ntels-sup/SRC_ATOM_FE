<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ntels.avocado.dao.atom.security.userlevel.UserLevelMapper">

	<select id="listUserLevel" resultType="java.util.Map">
		 SELECT LEVEL_ID    AS ID
		      , LEVEL_TITLE AS NAME 
		   FROM TAT_USER_LEVEL
		  WHERE 1=1
		    AND LEVEL_ID <![CDATA[>=]]> #{userLevelId}
		  ORDER BY LEVEL_ID
	</select>
	
	<select id="getMenu" resultType="com.ntels.avocado.domain.atom.security.menu.Menu">
		SELECT MENU_ID
		     , MENU_NAME
		     , IS_FOLDER
		     , DEPTH
		     , UP_MENU_ID
		     , DISPLAY_ORDER
		  FROM TAT_MENU
		 WHERE PKG_NAME = #{pkgName}	
		ORDER BY DEPTH, DISPLAY_ORDER, MENU_ID
	</select>
	
	<select id="getAuthMenu" resultType="com.ntels.avocado.domain.atom.security.menu.Menu">
		SELECT B.MENU_ID
		     , A.MENU_NAME
		     , A.IS_FOLDER
		     , B.DEPTH
		     , B.UP_MENU_ID
		     , B.AUTH_TYPE
		     , B.DISPLAY_ORDER
		  FROM TAT_MENU A
		     , TAT_USER_AUTH B
		 WHERE 1=1
		   AND A.PKG_NAME = #{pkgName}
		   AND B.LEVEL_ID = #{levelId}
		   AND A.MENU_ID = B.MENU_ID	
		ORDER BY DEPTH, DISPLAY_ORDER, MENU_ID
	</select>
	
	<select id="count" resultType="int">
		SELECT COUNT(*)
		  FROM TAT_USER_LEVEL
		 WHERE 1=1
		   AND LEVEL_ID <![CDATA[>=]]> #{condition.userLevelId}
		   <if test="condition.levelId != 'all' and condition.levelId != '' and condition.levelId != null ">
		   AND LEVEL_ID = #{condition.levelId}
		   </if>
		 ORDER BY LEVEL_ID
	</select>
	
	<select id="list" resultType="com.ntels.avocado.domain.atom.security.userlevel.UserLevelDomain">
		<include refid="com.ntels.avocado.dao.common.CommonMapper.paging_header" />
			SELECT LEVEL_ID
			     , LEVEL_TITLE
			     , ACCOUNT_LIFE_CYCLE
			     , ACCOUNT_NOTI_DAY
			     , PASSWD_LIFE_CYCLE
			     , PASSWD_NOTI_DAY
			     , LOCK_TYPE
			     , (SELECT CODE_NAME
			          FROM TAT_COMMON_CODE
			         WHERE 1=1
			           AND LOCK_TYPE = DETAIL_CD
			           AND GROUP_CD = <include refid="com.ntels.avocado.dao.common.CodeDefine.COMMON_GROUP_CODE_LOCK_TYPE"/>) AS LOCK_TYPE_NAME
			     , ABSENT_LOCK_DAY
			     , DESCRIPTION
			  FROM TAT_USER_LEVEL 
			 WHERE 1=1
			   AND LEVEL_ID <![CDATA[>=]]> #{condition.userLevelId}
			   <if test="condition.levelId != 'all' and condition.levelId != '' and condition.levelId != null ">
			   AND LEVEL_ID = #{condition.levelId}
			   </if>
			 ORDER BY LEVEL_ID
		<include refid="com.ntels.avocado.dao.common.CommonMapper.paging_footer" />
	</select>

	<select id="detail" resultType="com.ntels.avocado.domain.atom.security.userlevel.UserLevelDomain">
		SELECT LEVEL_ID
		     , LEVEL_TITLE
		     , PASSWD_LIFE_CYCLE
		     , PASSWD_NOTI_DAY
		     , MAX_WRONG_PASSWD
		     , PASSWD_DUP_COUNT
		     , LOCK_TYPE
		     , LOCK_TIME
		     , ACCOUNT_LIFE_CYCLE
		     , ACCOUNT_NOTI_DAY
		     , ABSENT_LOCK_DAY
		     , (SELECT CODE_NAME
		          FROM TAT_COMMON_CODE
		         WHERE 1=1
		           AND LOCK_TYPE = DETAIL_CD
		           AND GROUP_CD = <include refid="com.ntels.avocado.dao.common.CodeDefine.COMMON_GROUP_CODE_LOCK_TYPE"/>) AS LOCK_TYPE_NAME
		     , DESCRIPTION
		  FROM TAT_USER_LEVEL
		 WHERE 1=1
		   AND LEVEL_ID <![CDATA[>=]]> #{condition.userLevelId}
		   AND LEVEL_ID = #{condition.level_id}
	</select>
	
	<update id="modifyAction" parameterType="com.ntels.avocado.domain.atom.security.userlevel.UserLevelDomain">
		UPDATE TAT_USER_LEVEL
		   SET PASSWD_LIFE_CYCLE = #{condition.passwd_life_cycle}
		     , PASSWD_NOTI_DAY = #{condition.passwd_noti_day}
		     , MAX_WRONG_PASSWD = #{condition.max_wrong_passwd}
		     , PASSWD_DUP_COUNT = #{condition.passwd_dup_count}
		     , LOCK_TYPE = #{condition.lock_type}
		     <if test='condition.lock_type == "T" '>
		     , LOCK_TIME = #{condition.lock_time}
		     </if>
		     , ACCOUNT_LIFE_CYCLE = #{condition.account_life_cycle}
		     , ACCOUNT_NOTI_DAY = #{condition.account_noti_day}
		     , ABSENT_LOCK_DAY = #{condition.absent_lock_day}
		     , DESCRIPTION = #{condition.description}
		 WHERE 1=1
		   AND LEVEL_ID = #{condition.level_id} 
	</update>

	<insert id="addAuthMenu" parameterType="com.ntels.avocado.domain.atom.security.userlevel.AuthMenuDomain">
		INSERT INTO TAT_USER_AUTH (
			  LEVEL_ID
			, MENU_ID
			, DEPTH
			, UP_MENU_ID
			, DISPLAY_ORDER
			, AUTH_TYPE
			)
		VALUES (
			  #{condition.level_id}
			, #{condition.menu_id}
			, #{condition.depth}
			, #{condition.up_menu_id}
			, #{condition.display_order}
			, #{condition.auth_type}
			)
	</insert>

	<delete id="removeAuthMenu" parameterType="com.ntels.avocado.domain.atom.security.userlevel.UserLevelDomain">
		DELETE FROM TAT_USER_AUTH
		 WHERE 1=1
		   AND LEVEL_ID = #{condition.level_id}
		   AND MENU_ID IN (SELECT MENU_ID 
		                     FROM TAT_MENU
		                    WHERE 1=1
		                      AND LEVEL_ID = #{condition.level_id}
		                      AND PKG_NAME = #{condition.pkg_name}
		                   )
	</delete>
	
	<select id="listExcel" resultType="java.util.LinkedHashMap">
		SELECT LEVEL_TITLE AS 'User Level'
		     , ACCOUNT_LIFE_CYCLE AS 'Account Expiration'
		     , ACCOUNT_NOTI_DAY AS 'Account Report'
		     , PASSWD_LIFE_CYCLE AS 'Password Expiration'
		     , PASSWD_NOTI_DAY AS 'Password Report'
		     , (SELECT CODE_NAME
		          FROM TAT_COMMON_CODE
		         WHERE 1=1
		           AND LOCK_TYPE = DETAIL_CD
		           AND GROUP_CD = <include refid="com.ntels.avocado.dao.common.CodeDefine.COMMON_GROUP_CODE_LOCK_TYPE"/>) AS 'Password Lock Type'
		     , ABSENT_LOCK_DAY AS 'Account Lock'
		     , IFNULL(DESCRIPTION,'') AS 'Description'
		  FROM TAT_USER_LEVEL 
		 WHERE 1=1
		   AND LEVEL_ID <![CDATA[>=]]> #{condition.userLevelId}
		   <if test="condition.levelId != 'all' and condition.levelId != '' and condition.levelId != null ">
		   AND LEVEL_ID = #{condition.levelId}
		   </if>
		 ORDER BY LEVEL_ID
	</select>
	
</mapper>
